{"version":3,"sources":["componets/Statistics/Statistics.module.css","componets/Section/Section.module.css","componets/Statistics/Notification/Notification.module.css","componets/FeedbackOptions/Button/Button.module.css","componets/FeedbackOptions/FeedbackOptions.module.css","componets/Statistics/Statistics.jsx","componets/FeedbackOptions/FeedbackOptions.jsx","componets/Section/Section.jsx","componets/Statistics/Notification/Notification.jsx","componets/App/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","List","Item","FeedbackOptions","options","onLeaveFeedback","countTotalFeedback","Container","map","option","type","onClick","b","Button","Section","title","children","Title","Notification","message","Block","Message","App","state","props","initialValue","Object","values","reduce","acc","value","setState","prevState","percentage","Math","round","this","display","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,iBCAzDD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,QAAU,8BAA8B,MAAQ,8B,oBCAlED,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,UAAY,qC,+LCWfC,EATI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OAEf,qBAAIC,UAAWC,IAAEC,KAAjB,UAAuB,qBAAIF,UAAWC,IAAEE,KAAjB,oBAA+BR,KAClD,qBAAIK,UAAWC,IAAEE,KAAjB,uBAAkCP,KAClC,qBAAII,UAAWC,IAAEE,KAAjB,mBAA8BN,KAC9B,qBAAIG,UAAWC,IAAEE,KAAjB,qBAAgCL,KAChC,qBAAIE,UAAWC,IAAEE,KAAjB,kCAA6CJ,EAA7C,Y,kCCWOK,MAhBf,YAA4E,IAAjDC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,gBAEhC,OAFuE,EAAvBC,mBAI5C,qBAAKP,UAAWC,IAAEO,UAAlB,SAEKH,EAAQI,KAAI,SAAAC,GAAM,OACf,wBAAQC,KAAK,SAAsBC,QAAS,kBAAMN,EAAgBI,IAC9DV,UAAWa,IAAEC,OADjB,SAEKJ,GAFsBA,S,gBCJ5BK,EAJC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAEZ,0BAASjB,UAAWC,IAAEc,QAAtB,UAA+B,wBAAQf,UAAWC,IAAEiB,MAArB,SAA6BF,IAAgBC,M,gBCEjEE,EAJM,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAUG,EAAb,EAAaA,QAAb,OAEjB,sBAAKpB,UAAWC,IAAEoB,MAAlB,UAAyB,wBAAQrB,UAAWC,IAAEqB,QAArB,SAA+BF,IAAkBH,MCExEM,E,4MASJC,MAAQ,CACN7B,KAAM,EAAK8B,MAAMC,aACjB9B,QAAS,EAAK6B,MAAMC,aACpB7B,IAAK,EAAK4B,MAAMC,c,EAGlBnB,mBAAqB,WACnB,OAAOoB,OAAOC,OAAO,EAAKJ,OAAOK,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAGvEzB,gBAAkB,SAACD,GACjB,EAAK2B,UAAS,SAAAC,GAAS,sBACpB5B,EAAU4B,EAAU5B,GAAW,O,EAIpCN,mBAAqB,WACnB,IAAMmC,EAAaC,KAAKC,MAAO,EAAKZ,MAAM7B,KAAO,EAAKY,qBAAwB,KAC9E,OAAO2B,GAAc,EAAIA,EAAa,G,uDAItC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAUlB,MAAM,wBAAhB,SACA,cAAC,EAAD,CAAiBX,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBAAiB+B,KAAK/B,oBAE5E,cAAC,EAAD,CAASU,MAAM,aAAasB,SAAS,EAArC,SACgC,IAA9BD,KAAK9B,qBAA8B,cAAC,EAAD,CAAca,QAAQ,sBACrD,cAAC,EAAD,CAAYzB,KAAM0C,KAAKb,MAAM7B,KAAMC,QAASyC,KAAKb,MAAM5B,QAASC,IAAKwC,KAAKb,MAAM3B,IAChFC,MAAOuC,KAAK9B,qBAAsBR,mBAAoBsC,KAAKtC,gC,GAvCvDwC,aAAZhB,EAEGiB,aAAe,CACpBd,aAAc,GA2CHH,QChDfkB,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,2BAEFC,SAASC,eAAe,W","file":"static/js/main.f3dc80fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Statistics_List__1-FwJ\",\"Item\":\"Statistics_Item__23yMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section\":\"Section_Section__IxaEv\",\"Title\":\"Section_Title__2W085\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Notification_Message__2wso_\",\"Block\":\"Notification_Block__15kH2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2rmJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"FeedbackOptions_Container__1qFQZ\"};","import React from 'react';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) =>\n    \n    <ul className={s.List}><li className={s.Item}>Good:  {good}</li>\n        <li className={s.Item}>Neutral:  {neutral}</li>\n        <li className={s.Item}>Bad:  {bad}</li>        \n        <li className={s.Item}>Total:  {total}</li>\n        <li className={s.Item}>PositivePercentage:  {positivePercentage} %</li>\n    </ul>\n\nexport default Statistics;","import React from 'react';\nimport b from './Button/Button.module.css';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback,countTotalFeedback } ) {\n    \n    return (\n\n        <div className={s.Container}>\n        \n            {options.map(option =>\n                <button type='button' key={option} onClick={() => onLeaveFeedback(option)}\n                    className={b.Button} >\n                    {option}</button>)}\n            \n        </div>\n\n        )\n}    \n\nexport default FeedbackOptions;\n","import React from 'react';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) =>\n    \n    <section className={s.Section}><header className={s.Title}>{title}</header>{children}</section>;\n\nexport default Section;","import React from 'react';\nimport s from './Notification.module.css'\n\nconst Notification = ({ children, message }) =>\n    \n    <div className={s.Block}><header className={s.Message}>{message}</header>{children}</div>\n\nexport default Notification; ","import React, { Component } from 'react';\nimport './App.css';\nimport Statistics from '../Statistics'\nimport FeedbackOptions from '../FeedbackOptions';\nimport Section from '../Section';\nimport Notification from '../Statistics/Notification';\n\nclass App extends Component {\n\n  static defaultProps = {\n    initialValue: 0,    \n  }\n  static propTypes = {\n   //\n  }\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n \n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n\n  onLeaveFeedback = (options) =>{\n    this.setState(prevState => ({\n      [options]: prevState[options] + 1,\n     }));\n  };\n\n  positivePercentage = () => {\n    const percentage = Math.round((this.state.good / this.countTotalFeedback()) * 100);\n    return percentage >= 0 ? percentage : 0;\n  };\n       \n  render() {\n    return (\n      <Section>\n        <Section  title=\"Please leave feedback\" >\n        <FeedbackOptions options={['good', 'neutral', 'bad']} onLeaveFeedback={this.onLeaveFeedback} />\n        </Section>\n        <Section title=\"Statistics\" display={true}>\n        {(this.countTotalFeedback() === 0) ? <Notification message=\"No feedback given\" />\n            : <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad}\n              total={this.countTotalFeedback()} positivePercentage={this.positivePercentage()} />}          \n        </Section>\n     </Section>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './componets/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <div></div>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}